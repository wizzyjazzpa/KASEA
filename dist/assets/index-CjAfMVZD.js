import{aZ as i,a_ as n,a$ as c,b1 as b,b0 as T,b2 as d,b3 as l,b8 as m,b9 as f,aX as x,bc as E,bd as h,aS as p,aY as B,be as g,bf as y,b4 as H,bg as u,bh as I,aQ as S,b5 as v,ba as z,bi as k,bj as C,bk as O,bl as R,b6 as A,bb as L,b7 as w,aR as P,bm as U}from"./main-Dd-s-ui_.js";import{F,a as V,I as j,b as G,c as K,d as N,T as D,q as J,s as M,u as Q,v as X,y as Y,E as Z,w as _,x as $,B as W,e as aa,C as sa,h as ea,j as ra,l as oa,f as ta,D as ia,g as na,i as ca,k as ba,n as Ta,o as da,G as la,H as ma,m as fa,r as xa,K as Ea,L as ha,J as pa,M as Ba,N as ga,O as ya,z as Ha,A as ua,p as Ia,t as Sa}from"./number-Cg3OaPNY.js";function r({chains:a,id:s}){return a.find(e=>e.id===s)}export{i as BaseError,F as FeeCapTooHighError,n as IntegerOutOfRangeError,V as InvalidAddressError,j as InvalidChainIdError,c as InvalidHexBooleanError,G as InvalidLegacyVError,K as InvalidSerializableTransactionError,N as InvalidStorageKeySizeError,b as SizeExceedsPaddingSizeError,T as SizeOverflowError,d as SliceOffsetOutOfBoundsError,D as TipAboveFeeCapError,J as assertTransactionEIP1559,M as assertTransactionEIP2930,Q as assertTransactionLegacy,X as blobsToCommitments,Y as blobsToProofs,l as boolToBytes,m as boolToHex,f as bytesToHex,Z as checksumAddress,_ as commitmentToVersionedHash,$ as commitmentsToVersionedHashes,W as concatHex,aa as defineBlock,sa as defineChain,ea as defineTransaction,ra as defineTransactionReceipt,oa as defineTransactionRequest,x as etherUnits,r as extractChain,ta as formatBlock,E as formatEther,ia as formatGwei,na as formatLog,ca as formatTransaction,ba as formatTransactionReceipt,Ta as formatTransactionRequest,h as formatUnits,p as fromHex,da as getTransactionType,B as gweiUnits,g as hexToBigInt,y as hexToBool,H as hexToBytes,u as hexToNumber,I as hexToString,la as isAddress,S as isHex,ma as keccak256,fa as maxUint16,v as numberToBytes,z as numberToHex,k as pad,C as padBytes,O as padHex,xa as rpcTransactionType,Ea as serializeAccessList,ha as serializeTransaction,pa as sha256,R as size,Ba as slice,ga as sliceBytes,ya as sliceHex,A as stringToBytes,L as stringToHex,Ha as toBlobSidecars,ua as toBlobs,w as toBytes,P as toHex,Ia as toRlp,Sa as transactionType,U as trim};
