<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= locals.title %></title>
    <link rel="icon" type="image/x-icon" href="/static/favicon.ico">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.8/css/bootstrap-grid.min.css" integrity="sha512-dOjUSaLkr6G2pwQ7ry9juX+iXw5602zg1kg8yH+guR3uSEidGyCnOEQnGlr7xwu/8WE+pVm1ZNqaIs5ETTIJQg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/7.0.1/css/all.min.css" integrity="sha512-2SwdPD6INVrV/lHTZbO2nodKhrnDdJK9/kg2XD1r9uGqPo1cUbujc+IYdlYdEErWNu69gVcYgdxlmVmzTWnetw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.js"></script>
    <script src="https://unpkg.com/feather-icons"></script>
    <script src="https://cdn.jsdelivr.net/npm/web3@1.5.2/dist/web3.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
    <style>
        .gradient-bg {
            background: linear-gradient(135deg, #6e8efb 0%, #a777e3 100%);
        }
        .token-card {
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        .phase-active {
            box-shadow: 0 0 15px rgba(103, 65, 217, 0.6);
            border-color: #6741d9;
        }
        .payment-method.active {
            border-color: #6741d9;
            background: rgba(103, 65, 217, 0.1);
        }
    </style>
</head>
<body class="min-h-screen bg-gray-900 text-white">
    <!-- Navigation -->
     <script type="module" src="/assets/main-Dd-s-ui_.js"></script>
    <nav class="bg-gray-800 bg-opacity-90 backdrop-blur-md fixed w-full z-50">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex items-center justify-between h-16">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <img src="images/KASEA_060323.svg" style="width: 20%;">
                    </div>
                </div>
               
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="pt-24 pb-12 px-4 sm:px-6 lg:px-8 max-w-7xl mx-auto">
        <div class="text-center mb-12" data-aos="fade-up">
            <h1 class="text-4xl md:text-5xl font-bold mb-4">Join Our Token Presale</h1>
            <p class="text-xl text-gray-300 max-w-3xl mx-auto">Secure your tokens at the best price before we hit the exchanges</p>
        </div>

   

             <div class="flex items-center space-x-4"  style=" margin-bottom: 2%; display: block; ">
                    <button id="connectBtn" class="px-4 py-2 rounded-full gradient-bg text-white font-medium hover:opacity-90 transition" style="margin-left: 30%; margin-bottom: 2%;">
                        Connect Wallet
                    </button>
                       
                    <div id="walletInfo" class="hidden items-center space-x-2 bg-gray-700 px-3 py-1 rounded-full" style="overflow: hidden;" >
                        <i data-feather="user" class="w-4 h-4"></i>
                        <span id="walletAddress" class="text-sm" style="font-size: x-small;"></span>
                    </div>
                </div>
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            
            <!-- Left Column - Presale Info -->
            <div class="lg:col-span-2 space-y-8">
                <!-- Presale Phases -->
                <div class="token-card rounded-xl p-6" data-aos="fade-right">
                    <h2 class="text-2xl font-bold mb-6">Presale Phases</h2>
                    <div class="grid grid-cols-1 lg:grid-cols-3 gap-4">
                        <div class="phase-card phase-active rounded-lg border-2 border-gray-700 p-4 text-center">
                            <h3 class="font-bold text-lg"> Current Phase <span id="phase"></span></h3>
                            <p class="text-sm text-gray-300">Token Price <span id="price"></span></p>
                            <div class="mt-2 h-2 bg-gray-700 rounded-full">
                                <div class="h-2 bg-green-500 rounded-full" id="progressBar" style="width:10%"></div>
                            </div><br/>
                            <p class="text-xs mt-1" id="status-1"></p>
                        </div>
                        <!--<div class="phase-card rounded-lg border-2 border-gray-700 p-4 text-center">
                            <h3 class="font-bold text-lg">Phase 2</h3>
                            <p class="text-sm text-gray-300">1 ETH = 8,000 TKN</p>
                            <div class="mt-2 h-2 bg-gray-700 rounded-full">
                                <div class="h-2 bg-gray-600 rounded-full" id="bar-2" style="width: 0%"></div>
                            </div>
                            <p class="text-xs mt-1" id="status-2">Coming soon</p>
                        </div>-->
                       <!----<div class="phase-card rounded-lg border-2 border-gray-700 p-4 text-center">
                            <h3 class="font-bold text-lg">Phase 3</h3>
                            <p class="text-sm text-gray-300">1 ETH = 5,000 TKN</p>
                            <div class="mt-2 h-2 bg-gray-700 rounded-full">
                                <div class="h-2 bg-gray-600 rounded-full" id="bar-3" style="width: 0%"></div>
                            </div>
                            <p class="text-xs mt-1"  id="status-3">Coming soon</p>
                        </div>-->
                    </div>
                </div>

                <!-- Payment Methods -->
                <div class="token-card rounded-xl p-6" data-aos="fade-right" data-aos-delay="100">
                    <h2 class="text-2xl font-bold mb-6">Select Payment Method</h2>
                    <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
                        <button class="payment-method active rounded-lg border-2 border-gray-700 p-4 flex flex-col items-center transition hover:border-purple-500">
                            <img src="wallet_icons/ethereum_white.svg" alt="Ethereum" class="h-10 w-10 mb-2">
                            <span class="font-medium">Ethereum (ETH)</span>
                        </button>
                        <button class="payment-method rounded-lg border-2 border-gray-700 p-4 flex flex-col items-center transition hover:border-purple-500">
                            <img src="wallet_icons/sol.svg" alt="Solana" class="h-10 w-10 mb-2">
                            <span class="font-medium">Solana (SOL)</span>
                        </button>
                        <button class="payment-method rounded-lg border-2 border-gray-700 p-4 flex flex-col items-center transition hover:border-purple-500">
                            <img src="wallet_icons/tron.svg" alt="Tron" class="h-10 w-10 mb-2">
                            <span class="font-medium">Tron (TRX)</span>
                        </button>
                    </div>
                </div>

                <div class="token-card rounded-xl p-6" data-aos="fade-right" data-aos-delay="100">
                    <h2 class="text-2xl font-bold mb-6">TASEA BALANCE</h2>
                    <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
                        <button class="payment-method rounded-lg border-2 border-gray-700 p-4 flex flex-col items-center transition hover:border-purple-500">
                            <img src="wallet_icons/dollar.png" alt="" class="h-10 w-10 mb-2">
                            <span class="font-medium" id="taseaBalance_txt">0.00 (KTN)</span>
                        </button>

                         <button class="payment-method rounded-lg border-2 border-gray-700 p-4 flex flex-col items-center transition hover:border-purple-500">
                            <img src="wallet_icons/dollar-symbol.png" alt="" class="h-10 w-10 mb-2">
                            <span class="font-medium" id="usdBalance_txt">$ 0.00</span>
                        </button>
                        
                    </div>
                </div>

            </div>

            <!-- Right Column - Token Calculator -->
            <div class="token-card rounded-xl p-6" data-aos="fade-left" data-aos-delay="200">
                <h2 class="text-2xl font-bold mb-6">Token Calculator</h2>
                
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium mb-1">Amount to Send</label>
                        <div class="relative">
                            <input type="number" id="cryptoAmount" class="w-full bg-gray-800 border border-gray-700 rounded-lg py-3 px-4 focus:outline-none focus:ring-2 focus:ring-purple-500" placeholder="0.0">
                            <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                                <span class="text-gray-400" id="cryptoCurrency">ETH</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="flex justify-center py-2">
                        <i data-feather="arrow-down" class="w-6 h-6 text-gray-400"></i>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium mb-1">You Receive</label>
                        <div class="relative">
                            <!--<input type="text" id="tokenAmount" readonly class="w-full bg-gray-800 border border-gray-700 rounded-lg py-3 px-4 focus:outline-none focus:ring-2 focus:ring-purple-500" placeholder="0.0">
                            <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                                <span class="text-gray-400">TST</span>
                            </div>-->
                            <p id="priceamount_tx" class="w-full bg-gray-800 border border-gray-700 rounded-lg py-3 px-4 focus:outline-none focus:ring-2 focus:ring-purple-500">0.0</p>
                            <p id="minimum_amount" style="margin-left:2%; font-style:oblique; color:whitesmoke"></p>
                            <p   id="walletAddress_txt" style="color: #5555; overflow: hidden;"></p>
                           
                        </div>
                    </div>
                    
                    <div class="pt-4">
                        <button id="buyTokensBtn" class="w-full gradient-bg text-white font-bold py-3 px-4 rounded-lg hover:opacity-90 transition disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                            Buy Tokens
                        </button>
                    </div>
                </div>
                
                <div class="mt-6 pt-6 border-t border-gray-700" >
                    <h3 class="font-bold mb-2" style=" text-align: center;">Presale Details</h3>
                    <div class="space-y-3 text-sm" id="summary" >
                        
                                
                    </div>
                </div>
            </div>
        </div>

        <div
  id="myModal"
  class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center"
>
  <!-- Modal content -->
  <div class="bg-white p-6 rounded-lg w-80" style="width: 90%;">
    <h2 class="text-xl font-semibold mb-4">Modal Title</h2>
    <p class="mb-4 text-gray-600" id="display_currency" style="font-size:small ;"> </p>
    <p id="textToCopy" class="mb-4 text-gray-600" style="font-size:smaller ;"></p>
    <button type="button" id="copyBtn" class="px-4 py-2 bg-green-600 text-white rounded">Copy WalletAddress</button>
     <p id="copyStatus" class="text-green-600 mt-3 hidden">Wallet Address Copied</p>
    <div class="flex justify-end">
      <button
        onclick="document.getElementById('myModal').classList.add('hidden')"
        class="px-4 py-2 bg-gray-300 rounded mr-2"
      >
        Confirm
      </button>
      
    </div>
  </div>
</div>
    </main>

    <footer class="bg-gray-800 py-8">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex flex-col md:flex-row justify-between items-center">
                <div class="mb-4 md:mb-0">
                    <span class="text-xl font-bold bg-clip-text text-transparent gradient-bg">KASEA</span>
                </div>
                <div class="flex space-x-6">
                    <a href=" https://x.com/kasea_token?t=VAmvPfm8MNXYduNkMesDuA&s=09" class="text-gray-400 hover:text-white transition">
                        <i data-feather="twitter"></i>
                    </a>
                    <a href="https://t.me/kaseamemeprsale" class="text-gray-400 hover:text-white transition">
                        <i data-feather="telegram"></i>
                    </a>
                    <a href="https://t.me/kaseamemeprsale" class="text-gray-400 hover:text-white transition">
                        <i data-feather="telegram"></i>
                    </a>
                    <a href="#" class="text-gray-400 hover:text-white transition">
                        <i data-feather="discord"></i>
                    </a>
                </div>
            </div>
            <div class="mt-8 pt-8 border-t border-gray-700 text-center text-gray-400 text-sm">
                <p>© 2025 KASEA. All rights reserved.</p>
            </div>
        </div>
        <script src="js/tasea_main.js"></script>
    </footer>

    <script>
        // Initialize AOS and Feather Icons
        AOS.init();
        feather.replace();
        document.getElementById('connectBtn').addEventListener('click',function(){
            document.getElementById('buyTokensBtn').disabled = false;
        })
        // Wallet connection simulation
        document.getElementById('connectWalletBtn').addEventListener('click', function() {
            // In a real app, this would connect to MetaMask, WalletConnect, etc.
            // For demo purposes, we'll simulate a connection
            const walletAddress = '0x71C7...3e4a';
            document.getElementById('walletAddress').textContent = walletAddress;
            document.getElementById('walletIn').classList.remove('hidden');
            document.getElementById('connectWalletBtn').classList.add('hidden');
            document.getElementById('buyTokensBtn').disabled = false;
            
            // Show success notification
           // alert('Wallet connected successfully!');
        });
        
        // Payment method selection
        let getcurrency =""
        let getwalletAddress ="";
        const paymentMethods = document.querySelectorAll('.payment-method');
        paymentMethods.forEach(method => {
            method.addEventListener('click', function() {
                paymentMethods.forEach(m => m.classList.remove('active'));
                this.classList.add('active');
                
                // Update the calculator currency display
                const currency = this.querySelector('span').textContent.split(' ')[1];
                document.getElementById('cryptoCurrency').textContent = currency;
               localStorage.setItem("Currency", currency);
               switch(currency){
                case "(SOL)":
                    getwalletAddress = "HHE9x6DfCR1GXVwr3eR5TZrDbmYq4szoFkZ3z6NJ7wZ5";
                    break;
                 case "(ETH)":
                    getwalletAddress ="0x09cE9f62Bd0Cc3252efC819bC519e27fa4Fae93d";
                    break;
                 case "(TRX)":
                     getwalletAddress ="TSPscJis6GaRxEWAGxw3pRC7GkmXUh7cKP";
                     break;
                 default:
                    alert("No wallet address for cryto currency");

               }
                
                
                // Update token price display based on selected currency
                updateTokenPrice(currency);
                
                // Clear previous calculation
                document.getElementById('tokenAmount').value = '';
            });
        });
        
        // Token calculation
      /*  document.getElementById('cryptoAmount').addEventListener('input', function() {
            const amount = parseFloat(this.value) || 0;
            const currency = document.getElementById('cryptoCurrency').textContent;
            let tokenAmount = 0;
            
            // Different conversion rates for different currencies
            if (currency === 'ETH') {
                tokenAmount = amount * 10000; // Phase 1 rate
            } else if (currency === 'SOL') {
                tokenAmount = amount * 500; // Example rate
            } else if (currency === 'TRX') {
                tokenAmount = amount * 0.5; // Example rate
            }
            
            document.getElementById('tokenAmount').value = tokenAmount.toLocaleString();
        });*/
        
        // Buy tokens button
        document.getElementById('buyTokensBtn').addEventListener('click', function() {
            const amount = document.getElementById('cryptoAmount').value;
            if (!amount || parseFloat(amount) <= 0) {
                alert('Please enter a valid amount');
                return;
            }
            
            const currency = document.getElementById('cryptoCurrency').textContent;
             let message =`Transaction initiated: Please pay ${amount} ${currency} `;
             let copytext =`${getwalletAddress}`;
             document.getElementById('display_currency').innerText=message;
             document.getElementById('textToCopy').innerText=copytext;
           // alert(`Transaction initiated: Please pay ${amount} ${currency}\n to ${getwalletAddress} `);
            document.getElementById('myModal').classList.remove('hidden')
            // In a real app, this would trigger the blockchain transaction
        });
        
        // Update token price display based on selected currency
        function updateTokenPrice(currency) {
            let priceText = '';
            if (currency === 'ETH') {
                priceText = '10,000 TKN per 1 ETH';
            } else if (currency === 'SOL') {
                priceText = '500 TKN per 1 SOL';
            } else if (currency === 'TRX') {
                priceText = '0.5 TKN per 1 TRX';
            }
            document.getElementById('tokenPrice').textContent = priceText;
        }

       const copyBtn = document.getElementById("copyBtn");
       const textToCopy = document.getElementById("textToCopy");
       const copyStatus = document.getElementById("copyStatus");

            copyBtn.addEventListener("click", async () => {
            try {
                await navigator.clipboard.writeText(textToCopy.innerText);
                // Show success message
                copyStatus.classList.remove("hidden");
                // Hide after 2 seconds
                setTimeout(() => copyStatus.classList.add("hidden"), 2000);
            } catch (err) {
                alert("Failed to copy text: " + err);
            }
    });
    </script>

  <script>
  /* $(document).ready(function () {
  let currentPhase = parseInt(localStorage.getItem("currentPhase")) || 1;
  let progress = parseInt(localStorage.getItem("progress")) || 0;
  const intervalTime = 60000 / 10; // every 6s for demo. Change to 60000 for 1min

  function renderUI() {
    for (let i = 1; i <= 3; i++) {
      const $bar = $(`#bar-${i}`);
      const $status = $(`#status-${i}`);
      const $phaseBox = $(`#phase-${i}`);

      if (i < currentPhase) {
        // Completed phases
        $bar.css("width", "100%");
        $status.text("100% sold");
        $phaseBox.addClass("opacity-60");
      } else if (i === currentPhase) {
        // Active phase
        $bar.css("width", progress + "%");
        $status.text(progress + "% sold");
        $phaseBox.removeClass("opacity-60");
      } else {
        // Future phases
        $bar.css("width", "0%");
        $status.text("Coming soon");
        $phaseBox.addClass("opacity-60");
      }
    }
  }

  function updateProgress() {
    if (currentPhase > 3) {
      clearInterval(timer);
      return;
    }

    progress += 10; // 10% each tick

    if (progress >= 100) {
      progress = 100;
      localStorage.setItem("progress", progress);
      renderUI();

      // move to next phase
      currentPhase++;
      progress = 0;

      localStorage.setItem("currentPhase", currentPhase);
      localStorage.setItem("progress", progress);

      if (currentPhase > 3) {
        clearInterval(timer); // stop after Phase 3
      }
    }

    localStorage.setItem("progress", progress);
    renderUI();
  }

  // Render UI immediately on load
  renderUI();

  // Run every 6s for demo
 // let timer = setInterval(updateProgress, intervalTime);
});
*/
  </script>
</body>
</html>
